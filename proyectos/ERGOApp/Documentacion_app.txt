##INSTRUCCIONES PARA PROMPT
no reescribas todo el c√≥digo s√≥lo dame las partes que hay que cambias modificar editar o eliminar, si hay c√≥digo que no se usa por favor indicarlo para eliminarlo, y dame las instrucciones exactas para implementar el c√≥digo, que me das, procura la optimizaci√≥n de recursos. 

# ERGOApp - Documentaci√≥n Completa del Sistema

**Nombre de la APP:** ERGOApp  
**Prop√≥sito:** Sistema de evaluaci√≥n ergon√≥mica para evaluar √°reas y centros de trabajo

## üöÄ Tecnolog√≠as

- **Frontend:** HTML, CSS, JavaScript
- **Backend:** Supabase (PostgreSQL, autenticaci√≥n, almacenamiento de archivos y eventos en tiempo real)

/* === supabase-config.js === */
// Este archivo inicializa el cliente de Supabase y centraliza
// todas las llamadas a la base de datos en un √∫nico objeto.

// const { createClient } = require('@supabase/supabase-js'); // Node
// import { createClient } from '@supabase/supabase-js' // ES6
const _supabase = createClient(ERGOConfig.SUPABASE_URL, ERGOConfig.SUPABASE_ANON_KEY);

const supabase = {
    // --- Evaluaciones ---
    
    /**
     * Obtiene la √∫ltima evaluaci√≥n para un centro de trabajo espec√≠fico.
     * @param {string} workCenterId - El ID del centro de trabajo.
     * @returns {Promise<object|null>} El objeto de la evaluaci√≥n o null si no se encuentra.
     */
    getEvaluacion: async (workCenterId) => {
        const { data, error } = await _supabase
            .from('evaluaciones') // Tabla consultada
            .select('*')
            .eq('work_center_id', workCenterId) // Columna de b√∫squeda
            .order('fecha_evaluacion', { ascending: false }) // Siempre trae la m√°s reciente
            .limit(1)
            .single(); // Devuelve un objeto, no un array

        if (error && error.code !== 'PGRST116') { // Ignorar error si no encuentra filas
            console.error('Error en getEvaluacion:', error);
            return null;
        }
        return data;
    },

    /**
     * Crea un nuevo registro de evaluaci√≥n.
     * @param {object} evaluacionData - El objeto completo de la evaluaci√≥n.
     * @returns {Promise<object|null>} Los datos creados.
     */
    createEvaluacion: async (evaluacionData) => {
        const { data, error } = await _supabase
            .from('evaluaciones')
            .insert([evaluacionData])
            .select()
            .single();
            
        if (error) {
            console.error('Error en createEvaluacion:', error);
        }
        return data;
    },

    // ... y as√≠ para updateEvaluacion, getAreas, getWorkCenters, etc.
};


**Arquitectura:**
- Patr√≥n MVC simplificado
- Funciones globales centralizadas (globals.js)
- Manejo h√≠brido Supabase/localStorage para compatibilidad

---

## Estructura de Base de Datos (Supabase)

### Tabla: `usuarios`
Gesti√≥n de autenticaci√≥n y permisos del sistema.

| column_name | data_type                | descripci√≥n |
| ----------- | ------------------------ | ----------- |
| id          | serial PRIMARY KEY       | ID √∫nico del usuario |
| usuario     | text UNIQUE              | Nombre de usuario para login |
| password    | text                     | Contrase√±a (sin encriptar) |
| nombre      | text                     | Nombre completo para UI |
| puesto      | text                     | Cargo/rol para mostrar |
| rango       | integer                  | Nivel de permisos (1=Admin, 2=Editor, 3=Visualizador) |

### Tabla: `areas`
Gesti√≥n de √°reas de trabajo con m√©tricas calculadas.

| column_name          | data_type                | descripci√≥n |
| -------------------- | ------------------------ | ----------- |
| id                   | text                     | ID √∫nico del √°rea |
| name                 | text                     | Nombre del √°rea |
| responsible          | text                     | Responsable del √°rea |
| created_at           | timestamp with time zone | Fecha de creaci√≥n |
| total_centros        | integer                  | Total de centros en el √°rea |
| centros_evaluados    | integer                  | Centros con evaluaci√≥n |
| promedio_score       | numeric                  | Promedio de riesgo del √°rea |
| color_promedio       | text                     | Color para UI seg√∫n riesgo |
| ultima_actualizacion | timestamp with time zone | √öltima actualizaci√≥n |

### Tabla: `work_centers`
Centros de trabajo vinculados a √°reas.

| column_name | data_type                | descripci√≥n |
| ----------- | ------------------------ | ----------- |
| id          | text                     | ID √∫nico del centro |
| name        | text                     | Nombre del centro |
| responsible | text                     | Responsable del centro |
| area_id     | text                     | FK a tabla areas |
| created_at  | timestamp with time zone | Fecha de creaci√≥n |

### Tabla: `evaluaciones`
Evaluaciones ergon√≥micas principales con resultados.

| column_name             | data_type                | descripci√≥n |
| ----------------------- | ------------------------ | ----------- |
| id                      | text                     | ID √∫nico de evaluaci√≥n |
| work_center_id          | text                     | FK a work_centers |
| area_id                 | text                     | FK a areas |
| fecha_evaluacion        | date                     | Fecha de la evaluaci√≥n |
| nombre_area             | text                     | Nombre del √°rea evaluada |
| ubicacion_area          | text                     | Ubicaci√≥n del √°rea |
| responsable_area        | text                     | Responsable del √°rea |
| criterios               | jsonb                    | Criterios seleccionados |
| respuestas              | jsonb                    | Respuestas del cuestionario |
| score_final             | numeric                  | Score final de riesgo (0-100) |
| categoria_riesgo        | text                     | Categor√≠a de riesgo textual |
| nivel_riesgo_ergonomico | text                     | Nivel de riesgo como % |
| color_riesgo            | text                     | Color para UI seg√∫n riesgo |
| created_at              | timestamp with time zone | Fecha de creaci√≥n |
| updated_at              | timestamp with time zone | √öltima actualizaci√≥n |
| resultados_pictogramas  | jsonb		     | resultado de pictograma |
| resumen_semaforo        | jsonb		     | da el resumen del color del sem√°foro |
|riesgos_por_categoria	  |jsonb		     | Indica el nivel de riesgo |

### Tabla: `fotos_centros`
Gesti√≥n de fotos de los centros de trabajo.

| column_name    | data_type                | descripci√≥n |
| -------------- | ------------------------ | ----------- |
| id             | uuid                     | ID √∫nico de la foto |
| area_id        | text                     | FK a areas |
| work_center_id | text                     | FK a work_centers |
| foto_url       | character varying        | URL/path de la foto |
| foto_name      | text                     | Nombre original del archivo |
| created_at     | timestamp with time zone | Fecha de subida |

### Tabla: `scores_resumen` (Optimizaci√≥n)
Tabla optimizada para consultas r√°pidas de scores.

| column_name              | data_type                | descripci√≥n |
| ------------------------ | ------------------------ | ----------- |
| work_center_id           | text PRIMARY KEY         | FK a work_centers |
| area_id                  | text                     | FK a areas |
| score_actual             | numeric                  | √öltimo score del centro |
| categoria_riesgo         | text                     | Categor√≠a actual |
| color_riesgo             | text                     | Color para UI |
| fecha_ultima_evaluacion  | timestamp with time zone | √öltima evaluaci√≥n |
| total_evaluaciones       | integer                  | Total de evaluaciones |
| updated_at              | timestamp with time zone | √öltima actualizaci√≥n |

## üé® Notas de dise√±o UX/UI

- Est√©tica general basada en **glassmorphism**: transparencias, desenfoques (`backdrop-filter`) y bordes suaves.
- Transiciones suaves (`transition: all 0.3s ease-in-out`) en botones e inputs.
- Uso de **fuentes sans-serif modernas**: `Inter`, `Poppins` o `Roboto`.
- Layout basado en **grid flexible** (CSS Grid o Flexbox).
- Efecto **parallax** en la pantalla principal (fondo animado con `transform: translateZ()`).
- Compatibilidad optimizada para dispositivos Android con EMUI y Android 14.


## Sistema de Usuarios y Permisos

### Usuarios Configurados

| Usuario    | Contrase√±a | Rango | Permisos | Descripci√≥n |
| ---------- | ---------- | ----- | -------- | ----------- |
| `bran`     | `7563`     | 1     | CRUD completo | Administrador total |
| `invitado` | `1234`     | 3     | Solo lectura | Visualizador |

### Niveles de Permisos

**Rango 1 - Administrador:**
- ‚úÖ Read (Leer)
- ‚úÖ Create (Crear)
- ‚úÖ Update (Editar)
- ‚úÖ Delete (Eliminar)

**Rango 2 - Editor:**
- ‚úÖ Read (Leer)
- ‚úÖ Create (Crear)
- ‚ùå Update (Editar)
- ‚ùå Delete (Eliminar)

**Rango 3 - Visualizador:**
- ‚úÖ Read (Leer)
- ‚ùå Create (Crear)
- ‚ùå Update (Editar)
- ‚ùå Delete (Eliminar)

---

## Arquitectura del Sistema

### Archivos Principales

üìÅArchivos Core:

globals.js - Funciones globales centralizadas
supabase-config.js - Configuraci√≥n y cliente de Supabase
index.js - Aplicaci√≥n principal y dashboard
areas.js - Gesti√≥n de √°reas y centros de trabajo
eval_int.js - Sistema de evaluaciones ergon√≥micas  

üìÅ Archivos HTML:
index.html - P√°gina de login y dashboard
areas.html - Gesti√≥n de √°reas y centros 
centro-trabajo.html - Vista detallada de centros 
eval_int.html - Formulario de evaluaci√≥n inicial

### globals.js - Sistema Centralizado

**Funciones principales organizadas en m√≥dulos:**

```javascript
// Configuraci√≥n global
window.ERGOConfig = {
    USE_SUPABASE: true,
    SUPABASE_URL: '...',
    SUPABASE_ANON_KEY: '...',
    SESSION_DURATION: 8 * 60 * 60 * 1000, // 8 horas
    ACTIVITY_CHECK_INTERVAL: 60000 // 1 minuto
}

// Sistema de autenticaci√≥n y permisos
window.ERGOAuth = {
    getCurrentUser(),
    hasPermission(action),
    checkPermissionAndShowError(action),
    checkSession(),
    updateActivity(),
    logout(reason),
    redirectToLogin(),
    applyPermissionControls(),
    hideCreateButtons(),
    hideDeleteButtons(),
    setupSessionMonitoring()
}

// Utilidades generales
window.ERGOUtils = {
    generateShortId(),
    formatDate(dateString),
    formatDateTime(dateString),
    showToast(message, type),
    getScoreColor(score),
    getScoreCategory(score),
    sanitizeFilename(filename),
    debounce(func, wait)
}

// Navegaci√≥n unificada
window.ERGONavigation = {
    getUrlParams(),
    getParam(paramName),
    buildUrl(basePath, params),
    navigateToAreas(areaId),
    navigateToWorkCenter(workCenterId, areaId, areaName, centerName, responsible),
    navigateToEvaluation(workCenterId, areaId, areaName, centerName, responsible),
    navigateToSpecificEvaluation(type, workCenterId, areaId, areaName, centerName, responsible)
}

// Manejo de almacenamiento
window.ERGOStorage = {
    setLocal(key, value),
    getLocal(key, defaultValue),
    removeLocal(key),
    setSession(key, value),
    getSession(key, defaultValue),
    removeSession(key),
    clearAll()
}

// Sistema de modales
window.ERGOModal = {
    open(modalId),
    close(modalId),
    setupCloseOnOverlay(modalId)
}

// Validaciones
window.ERGOValidation = {
    isValidEmail(email),
    isValidPhone(phone),
    isValidId(id),
    validateRequired(fields),
    clearValidationErrors()
}
```

---

## Funcionalidades Principales

### 1. Dashboard Principal (index.html)
- **Login seguro** con validaci√≥n de usuarios
- **Tablas din√°micas** con datos de Supabase
- **Indicadores KPI** por √°rea
- **Top 10 centros con m√°s riesgo**
- **Navegaci√≥n directa** a √°reas y centros espec√≠ficos

### 2. Gesti√≥n de √Åreas (areas.html)
- **CRUD completo** de √°reas (seg√∫n permisos)
- **Vista de centros** por √°rea
- **Scores en tiempo real** con colores por riesgo
- **Navegaci√≥n breadcrumb** mejorada

### 3. Centros de Trabajo (centro-trabajo.html)
- **Vista detallada** del centro
- **Gesti√≥n de fotos** (m√°x. 5 por centro)
- **Notas y observaciones**
- **Evaluaciones espec√≠ficas** (REBA, RULA, OCRA, NIOSH)
- **Exportaci√≥n a PDF** completa

### 4. Sistema de Evaluaciones (eval_int.html)
- **Cuestionario ergon√≥mico** completo
- **C√°lculo autom√°tico** de scores de riesgo
- **Recomendaciones de m√©todos** espec√≠ficos
- **Guardado h√≠brido** Supabase/localStorage

---

## Mejoras Implementadas en v2.0

### üöÄ Refactoring Completo
- **Eliminaci√≥n de c√≥digo duplicado** (~800 l√≠neas menos)
- **Funciones centralizadas** en globals.js
- **Consistencia** en toda la aplicaci√≥n
- **Mantenimiento simplificado**

### üîê Sistema de Seguridad Mejorado
- **Sesiones con expiraci√≥n** (8 horas + inactividad 30 min)
- **Monitoreo de actividad** autom√°tico
- **Permisos granulares** por funci√≥n
- **Redirecci√≥n segura** entre p√°ginas

### üìä Optimizaci√≥n de Rendimiento
- **Tabla scores_resumen** para consultas r√°pidas
- **Consultas h√≠bridas** Supabase/localStorage
- **Carga as√≠ncrona** de datos
- **Manejo eficiente** de errores

### üé® Experiencia de Usuario
- **Navegaci√≥n unificada** con URLs limpias
- **Modales centralizados** con manejo consistente
- **Toasts informativos** para feedback
- **Breadcrumbs inteligentes**

### üõ†Ô∏è Mantenibilidad
- **Funciones puras** y testeables
- **Separaci√≥n de responsabilidades**
- **Configuraci√≥n centralizada**
- **Documentaci√≥n completa**

---

## Flujos de Trabajo

### Login y Autenticaci√≥n
```mermaid
graph TD
    A[Usuario ingresa credenciales] --> B[Validaci√≥n en Supabase]
    B --> C{¬øUsuario v√°lido?}
    C -->|S√≠| D[Crear sesi√≥n + permisos]
    C -->|No| E[Mostrar error]
    D --> F[Redirigir a dashboard]
    E --> A
```

### Evaluaci√≥n Ergon√≥mica
```mermaid
graph TD
    A[Seleccionar centro] --> B[Cargar evaluaci√≥n existente o nueva]
    B --> C[Completar cuestionario]
    C --> D[Calcular score autom√°tico]
    D --> E[Mostrar categor√≠a de riesgo]
    E --> F[Recomendar m√©todos espec√≠ficos]
    F --> G[Guardar en Supabase + localStorage]
```

### Gesti√≥n de Permisos
```mermaid
graph TD
    A[Usuario logueado] --> B[Verificar rango]
    B --> C{¬øRango 1?}
    C -->|S√≠| D[Mostrar todos los botones]
    B --> E{¬øRango 2?}
    E -->|S√≠| F[Ocultar botones de edici√≥n/eliminaci√≥n]
    B --> G{¬øRango 3?}
    G -->|S√≠| H[Solo mostrar botones de lectura]
```